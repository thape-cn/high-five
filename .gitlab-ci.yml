---
image: "ruby:3.1"

services:
  - postgres

variables:
  RAILS_ENV: test
  POSTGRES_DB: highfive_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "password"
  DATABASE_URL: "postgresql://postgres:password@postgres:5432/highfive_test"
  CACHE_FALLBACK_KEY: "$CI_COMMIT_REF_SLUG"

before_script:
  # Setup Node.js
  - curl -fsSL https://deb.nodesource.com/setup_20.x -o nodesource_setup.sh
  - bash nodesource_setup.sh
  - apt-get install -y nodejs

  # Install Yarn
  - npm config set registry https://registry.npmmirror.com/ --global
  - npm install --global yarn

  # Verify installations
  - node -v
  - yarn -v
  - ruby -v
  - which ruby

  # Setup Bundler
  - gem install bundler --no-document
  - bundle config set path 'vendor'  # Install dependencies into ./vendor/ruby
  - bundle install --jobs $(nproc)

  # Install JavaScript dependencies
  - yarn install --cache-folder .yarn-cache

stages:
  - test
  - deploy

test:
  stage: test
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn-cache/
  script:
    - bundle exec standardrb
    - bin/rails db:drop RAILS_ENV=test
    - bin/rails db:setup RAILS_ENV=test
    - bin/rails test
    - bin/rails test:system
  only:
    - main
    - merge_requests

deploy_production:
  stage: deploy
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn-cache/
  script:
    - mkdir ~/.ssh
    - mv "$SSH_ID_RSA" ~/.ssh/id_rsa
    - mv "$SSH_CONFIG_FILE" ~/.ssh/config
    - bundle exec cap production deploy
  environment:
    name: production
    url: https://high-five.thape.com.cn
  only:
    - main
